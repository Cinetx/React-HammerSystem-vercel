{"version":3,"sources":["components/shared-components/Loading/index.js","redux/constants/User.js","components/shared-components/Flex/index.js","configs/AppConfig.js","configs/EnvironmentConfig.js","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/reducers/Theme.js","redux/reducers/User.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/entries/ja_JP.js","lang/index.js","lang/entries/ru_RU.js","views/index.js","App.js","serviceWorker.js","index.js","redux/constants/Theme.js","redux/actions/Theme.js","redux/actions/Auth.js"],"names":["Icon","style","fontSize","spin","Loading","props","align","cover","className","indicator","defaultProps","LOAD_USERS_LIST","IS_USERS_LIST_LOAD","LOAD_SELECTED_USER","IS_SELECTED_USER_LOAD","Flex","children","alignItems","justifyContent","mobileFlex","flexDirection","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","USER_CONFIG","usersList","selectedUser","isUsersListLoaded","isSelectedUserLoaded","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","type","initTheme","theme","TOGGLE_COLLAPSED_NAV","SIDE_NAV_STYLE_CHANGE","CHANGE_LOCALE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","user","payload","reducers","combineReducers","Theme","Auth","User","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","removeItem","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","thunk","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","this","React","createElement","Component","mainNavTree","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","ShoppingCartOutlined","ShoppingOutlined","UserOutlined","PictureOutlined","GiftOutlined","ShopOutlined","UsergroupAddOutlined","MailOutlined","systemicNavTree","SettingOutlined","MobileOutlined","FileTextOutlined","navigationConfig","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","onMobileNavToggle","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","rgb","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","toggleCollapsedNav","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","configState","isCollapse","useThemeSwitcher","switcher","themes","rgbaToHex","Group","size","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","component","lazy","from","memo","Content","AppLayout","currentRouteInfo","isNavSide","status","paddingLeft","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","JaLang","antdJaJP","jaMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","jaLang","ru","antdRuRU","ruMsg","currentAppLocale","exact","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","hideAuthMessage","showLoading"],"mappings":"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","file":"static/js/main.9bdaee34.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","export const LOAD_USERS_LIST = 'LOAD_USERS_LIST';\nexport const IS_USERS_LIST_LOAD = 'IS_USERS_LIST_LOAD';\nexport const LOAD_SELECTED_USER = 'LOAD_SELECTED_USER';\nexport const IS_SELECTED_USER_LOAD = 'IS_SELECTED_USER_LOAD';","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'ru',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n\r\nexport const USER_CONFIG = {\r\n\tusersList: [],\r\n\tselectedUser: {},\r\n\tisUsersListLoaded: false,\r\n\tisSelectedUserLoaded: false,\r\n};","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import {USER_CONFIG} from 'configs/AppConfig'\nimport {IS_SELECTED_USER_LOAD, IS_USERS_LIST_LOAD, LOAD_SELECTED_USER, LOAD_USERS_LIST} from \"../constants/User\";\n\nconst initTheme = {\n    ...USER_CONFIG\n};\n\nconst user = (state = initTheme, action) => {\n    switch (action.type) {\n        case LOAD_USERS_LIST:\n            return {\n                ...state,\n                usersList: action.payload\n            };\n        case IS_USERS_LIST_LOAD:\n            return {\n                ...state,\n                isUsersListLoaded: action.payload\n            }\n        case LOAD_SELECTED_USER:\n            return {\n                ...state,\n                selectedUser: action.payload\n            };\n        case IS_SELECTED_USER_LOAD:\n            return {\n                ...state,\n                isSelectedUserLoaded: action.payload\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default user;","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\nimport User from './User'\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth,\r\n    user: User,\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware, thunk];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n    DashboardOutlined,\r\n    ShoppingCartOutlined,\r\n    ShoppingOutlined,\r\n    UserOutlined,\r\n    PictureOutlined,\r\n    GiftOutlined,\r\n    ShopOutlined,\r\n    UsergroupAddOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    MobileOutlined,\r\n    FileTextOutlined\r\n} from '@ant-design/icons';\r\nimport {APP_PREFIX_PATH} from 'configs/AppConfig'\r\n\r\n\r\nconst mainNavTree = [{\r\n    key: 'main',\r\n    path: `${APP_PREFIX_PATH}/main`,\r\n    title: 'sidenav.main',\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [\r\n        {\r\n            key: 'main-dashboard',\r\n            path: `${APP_PREFIX_PATH}/main/dashboard`,\r\n            title: 'sidenav.main.dashboard',\r\n            icon: DashboardOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-catalog',\r\n            path: `${APP_PREFIX_PATH}/main/catalog`,\r\n            title: 'sidenav.main.catalog',\r\n            icon: ShoppingCartOutlined,\r\n            breadcrumb: false,\r\n            submenu: [\r\n                {\r\n                    key: 'main-catalog-products',\r\n                    path: `${APP_PREFIX_PATH}/main/catalog/products`,\r\n                    title: 'sidenav.main.catalog.products',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-catalog-categories',\r\n                    path: `${APP_PREFIX_PATH}/main/catalog/categories`,\r\n                    title: 'sidenav.main.catalog.categories',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-catalog-collections',\r\n                    path: `${APP_PREFIX_PATH}/main/catalog/collections`,\r\n                    title: 'sidenav.main.catalog.collections',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-catalog-combo',\r\n                    path: `${APP_PREFIX_PATH}/main/catalog/combo`,\r\n                    title: 'sidenav.main.catalog.combo',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            key: 'main-orders',\r\n            path: `${APP_PREFIX_PATH}/main/orders`,\r\n            title: 'sidenav.main.orders',\r\n            icon: ShoppingOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-clients',\r\n            path: `${APP_PREFIX_PATH}/main/clients`,\r\n            title: 'sidenav.main.clients',\r\n            icon: UserOutlined,\r\n            breadcrumb: false,\r\n            submenu: [\r\n                {\r\n                    key: 'main-clients-list',\r\n                    path: `${APP_PREFIX_PATH}/main/clients/users-list`,\r\n                    title: 'sidenav.main.clients.userslist',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-clients-group',\r\n                    path: `${APP_PREFIX_PATH}/main/clients/group`,\r\n                    title: 'sidenav.main.clients.group',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            key: 'main-banners',\r\n            path: `${APP_PREFIX_PATH}/main/banners`,\r\n            title: 'sidenav.main.banners',\r\n            icon: PictureOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-promo-codes',\r\n            path: `${APP_PREFIX_PATH}/main/promo-codes`,\r\n            title: 'sidenav.main.promoCodes',\r\n            icon: GiftOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-offline-points',\r\n            path: `${APP_PREFIX_PATH}/main/offline-points`,\r\n            title: 'sidenav.main.offlinePoints',\r\n            icon: ShopOutlined,\r\n            breadcrumb: false,\r\n            submenu: [\r\n                {\r\n                    key: 'main-offline-points-addresses',\r\n                    path: `${APP_PREFIX_PATH}/main/offline-points/addresses`,\r\n                    title: 'sidenav.main.offlinePoints.addresses',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-offline-points-geofences',\r\n                    path: `${APP_PREFIX_PATH}/main/offline-points/geofences`,\r\n                    title: 'sidenav.main.offlinePoints.geofences',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            key: 'main-staff',\r\n            path: `${APP_PREFIX_PATH}/main/staff`,\r\n            title: 'sidenav.main.staff',\r\n            icon: UsergroupAddOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-newsletters',\r\n            path: `${APP_PREFIX_PATH}/main/newsletters`,\r\n            title: 'sidenav.main.newsletters',\r\n            icon: MailOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n    ]\r\n}]\r\n\r\nconst systemicNavTree = [\r\n    {\r\n        key: 'systemic',\r\n        path: `${APP_PREFIX_PATH}/systemic`,\r\n        title: 'sidenav.systemic',\r\n        icon: SettingOutlined,\r\n        breadcrumb: false,\r\n        submenu: [\r\n            {\r\n                key: 'systemic-settings',\r\n                path: `${APP_PREFIX_PATH}/main/settings`,\r\n                title: 'sidenav.systemic.settings',\r\n                icon: SettingOutlined,\r\n                breadcrumb: false,\r\n                submenu: []\r\n            },\r\n            {\r\n                key: 'systemic-mobile-app',\r\n                path: `${APP_PREFIX_PATH}/main/mobile-app`,\r\n                title: 'sidenav.systemic.mobileApp',\r\n                icon: MobileOutlined,\r\n                breadcrumb: false,\r\n                submenu: []\r\n            },\r\n            {\r\n                key: 'systemic-logs',\r\n                path: `${APP_PREFIX_PATH}/main/logs`,\r\n                title: 'sidenav.systemic.logs',\r\n                icon: FileTextOutlined,\r\n                breadcrumb: false,\r\n                submenu: []\r\n            },\r\n\r\n        ]\r\n    }]\r\n\r\n\r\nconst navigationConfig = [\r\n    ...mainNavTree,\r\n    ...systemicNavTree\r\n\r\n]\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, {lazy, Suspense} from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport {APP_PREFIX_PATH} from 'configs/AppConfig'\r\n\r\nexport const AppViews = ({match}) => {\r\n    return (\r\n        <Suspense fallback={<Loading cover=\"content\"/>}>\r\n            <Switch>\r\n                <Route path={`${APP_PREFIX_PATH}/home`} component={lazy(() => import(`./home`))}/>\r\n                <Route path={`${APP_PREFIX_PATH}/main`} component={lazy(() => import(`./main`))} />\r\n                <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`}/>\r\n            </Switch>\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default React.memo(AppViews);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\nimport ruLang from \"./entries/ru_RU\";\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang,\r\n    ru: ruLang\r\n};\r\n\r\nexport default AppLocale;","import antdRuRU from 'antd/es/locale/ru_RU';\nimport ruMsg from \"../locales/ru_RU.json\";\n\nconst RuLang = {\n    antd: antdRuRU,\n    locale: 'ru-RU',\n    messages: {\n        ...ruMsg\n    },\n};\nexport default RuLang;\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n"],"sourceRoot":""}